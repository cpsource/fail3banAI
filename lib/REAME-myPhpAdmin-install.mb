To run **phpMyAdmin** on your Ubuntu server, you first need to install it and configure Apache or Nginx to serve it. Here's how to get phpMyAdmin up and running:

### 1. **Install phpMyAdmin**

1. **Update your package list**:
   ```bash
   sudo apt update
   ```

2. **Install phpMyAdmin** along with the required dependencies (e.g., PHP and database libraries):
   ```bash
   sudo apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl
   ```

   During the installation process, you will be prompted to select a web server. If you're using Apache, select **apache2**.

3. **Select Apache as the web server** when prompted. If you don't see this prompt, it's possible Apache is not installed or you're using another web server like Nginx.

4. **Configure the database**:
   When prompted, choose **Yes** to configure the phpMyAdmin database automatically. Then, set the MySQL root password or the phpMyAdmin-specific password when prompted.

### 2. **Enable the PHP mbstring Extension**

If not already enabled, ensure that the `mbstring` PHP extension is enabled:

```bash
sudo phpenmod mbstring
```

### 3. **Restart Apache**

After installation, restart Apache to ensure phpMyAdmin is fully configured and available:

```bash
sudo systemctl restart apache2
```

### 4. **Access phpMyAdmin in Your Browser**

Now you can access phpMyAdmin by opening a web browser and navigating to:

```
http://your-server-ip/phpmyadmin
```

If you're running phpMyAdmin on your local machine, use `localhost`:

```
http://localhost/phpmyadmin
```

### 5. **Login to phpMyAdmin**

- **Username**: Use the **MariaDB/MySQL** user, often `root` (or another database user if you have configured one).
- **Password**: The password you set during the MySQL/MariaDB or phpMyAdmin installation process.

### 6. **Secure phpMyAdmin (Optional but Recommended)**

phpMyAdmin is a common target for attackers, so it's a good idea to secure it:

#### Secure Access with `.htaccess`

1. **Enable `.htaccess` overrides**:
   To use `.htaccess` to restrict access, ensure the Apache configuration allows overrides. Open the Apache configuration file for phpMyAdmin:

   ```bash
   sudo nano /etc/apache2/conf-available/phpmyadmin.conf
   ```

2. **Add the following lines inside the `<Directory>` directive** to enable `.htaccess`:

   ```apache
   <Directory /usr/share/phpmyadmin>
       Options FollowSymLinks
       DirectoryIndex index.php
       AllowOverride All
   </Directory>
   ```

3. **Create an `.htaccess` file** in the `/usr/share/phpmyadmin/` directory:

   ```bash
   sudo nano /usr/share/phpmyadmin/.htaccess
   ```

4. **Add the following to the `.htaccess` file** to restrict access by IP address or password-protect it:

   Example for restricting by IP:
   ```apache
   Order Deny,Allow
   Deny from all
   Allow from 192.168.1.100  # Replace with your IP address
   ```

5. **Restart Apache** to apply the changes:

   ```bash
   sudo systemctl restart apache2
   ```

### Troubleshooting

- **Missing Apache option during installation**: If the phpMyAdmin installer doesn't ask for a web server, manually configure Apache by running:

   ```bash
   sudo ln -s /etc/phpmyadmin/apache.conf /etc/apache2/conf-available/phpmyadmin.conf
   sudo a2enconf phpmyadmin
   sudo systemctl restart apache2
   ```

- **403 Forbidden Error**: If you receive a "403 Forbidden" error when trying to access phpMyAdmin, ensure that the `/etc/apache2/conf-available/phpmyadmin.conf` file is enabled, and permissions are set correctly.

---

Once phpMyAdmin is up and running, you should be able to manage your MariaDB/MySQL databases through its web interface. Let me know if you run into any issues!
